---
format: pdf

# misc
lang: pt-BR # siga o padrão: pt-BR, es-AR, en-US etc.
editor: source
---

# Metodologia

## Desenho da pesquisa

O presente estudo é caracterizado como quasi-experimental, ou estudo observacional com abordagem de causalidade. Esse tipo de estudo busca entender relações de causa e efeito, mas sem manipulação direta ou randomização total das variáveis. Em estudos experimentais puros envolve alto grau de controle e os participantes da amostra são alocados de forma aleatória. Nos estudos sociais de natureza quantitativa é muito difícil realizar um experimento controlado com amostra completamente aleatória. No caso, como o fenômeno de interesse é o pertencimento à faixa de fronteira, não é possível designar aleatoriamente municípios com e sem tratamento. Portanto, serão utilizados dados municipais recolhidos de diferentes fontes com variáveis de interesse em um determinado ponto no tempo e a partir da análise desses dados, através de modelos economètricos, pode-se estabelecer uma relação de causalidade.

Portanto, este estudo é quasi-experimental, uma vez que não há controle direto sobre quais municípios recebem o "tratamento" (o pertencimento à Faixa de Fronteira), mas sim observa os efeitos desse fator em contextos já estabelecidos, ajustando para fatores externos.

## Modelo de Regressão Descontínua (RD)

O modelo de Regressão Descontínua é uma metodologia de análise causal amplamente utilizada em contextos não-experimentais, onde a alocação de um tratamento ou intervenção depende de um ponto de corte claramente definido em uma variável contínua. De acordo com @imbens_regression_2007, o modelo de RD é poderoso para inferências causais, pois compara unidades logo acima e abaixo do ponto de corte, minimizando o impacto de fatores externos. Essa abordagem é particularmente útil quando uma randomização direta não é viável, mas ainda permite avaliar o efeito de uma intervenção ao observar uma descontinuidade no resultado em função da variável de corte.

@cattaneo_regression_2022 complementam essa discussão ao ampliar o leque de aplicações do RDD e oferecer uma revisão mais atualizada dos avanços metodológicos. Eles apresentam duas abordagens principais: o Continuity Framework, que usa regressão polinomial local para capturar a descontinuidade no ponto de corte, e o Local Randomization Framework, que trata a área ao redor do ponto de corte como um experimento aleatório natural. Eles destacam a necessidade de métodos rigorosos de validação e falsificação, incluindo testes de placebo e análise de densidade para garantir a validade dos resultados.

@huntington-klein_effect_2022 descreve três elementos importantes para lidar com o desenho de regressão descontínua:

1.  **Variável de corte** (Running variable): é a variável que determina se o elemento faz parte do grupo de tratamento ou não. Exemplos incluem o caso de recebimento de um programa do governo a partir de uma determinada renda, onde a renda é a variável de corte, ou a alocação de bolsas de estudo para alunos acima de uma determinada nota, onde a nota é a variável de corte.

2.  **Ponto de corte** (Cutoff): é o valor específico na variável de corte que determina a elegibilidade para o tratamento. Nos exemplos acima, os pontos de corte são o valor da renda a partir do qual se recebe o benefício ou o valor da nota para receber a bolsa de estudos.

3.  **Janela**, ou largura de banda (Bandwidth): refere-se ao intervalo ao redor do ponto de corte que é utilizado para analisar o efeito do tratamento. @huntington-klein_effect_2022 afirma que é razoável pensar que pessoas imediatamente próximas de um lado ou outro do ponto de corte são basicamente as mesmas, exceto pelo tratamento. A escolha da janela é crucial, pois envolve decidir qual área ao redor do ponto de corte é comparável.

Uma abordagem linear simples para a regressão descontínua pode ser descrita através da equação @eq-rddlinear

$$
Y = \beta_0 + \beta_1(Running-Cutoff) + \beta_2Treated+\beta_3(Running-Cutoff)\times Treated+ \varepsilon
$$ {#eq-rddlinear}

A variável de corte nesse caso está centralizada no ponto de corte utilizando $(Running-Cutoff)$, o que determina que valores negativos ficam à esquerda do ponto de corte, zero no ponto e positivos à direita. Na equação acima, não há variáveis de controle. Segundo @huntington-klein_effect_2022, a ideia central da regressão descontínua é que você tenha uma atribuição quase aleatória em ambos os lados do ponto de corte. Não deve ser necessário incluir variáveis de controle. Entretanto, não se trata de proibição, mas de cautela ao adicioná-los. A adição de controle pode às vezes melhorar a precisão do estimador reduzindo o tamanho da variação não explicada. @calonico2019 explica os métodos para adição de covariáveis no seu pacote econométrico de regressão descontínua.

A escolha do modelo de regressão descontínua é particularmente adequada para o estudo sobre os impactos na segurança pública do pertencimento à faixa de fronteira brasileira, pois essa metodologia permite explorar a atribuição não-aleatória de tratamento com base em um ponto de corte geográfico claramente definido. Nesse caso, o ponto de corte é estabelecido em termos de distância a partir do limite dos municípios pertencentes à faixa de fronteira, permitindo a comparação de municípios que estão imediatamente dentro (grupo de tratamento) e fora (grupo de controle) dessa faixa. Ao focar na descontinuidade ao redor desse limite, o RDD ajuda a identificar o efeito causal da presença das Forças Armadas e outras intervenções próprias dessas cidades, minimizando os vieses associados a outras variáveis que podem diferir entre municípios mais distantes da fronteira. Além disso, essa abordagem é robusta e eficaz para avaliar políticas e intervenções quando a randomização não é viável, tornando-a ideal para examinar o impacto em uma área delimitada geograficamente e em um contexto onde existem limitações logísticas e éticas para conduzir um experimento controlado.

## Dados

### Critérios de seleção

```{r}
dropbox <- "c:/Users/victo/dropbox/DISSERTACAO"

#### Meu exemplo
library(sf)
library(dplyr)
library(ggplot2)

fronteira <- read_sf(file.path(dropbox,"Fronteira/Faixa_de_Fronteira_por_UF_2022.shp")) %>%
  st_transform("WGS84") |> 
  rename("id_uf" = "CD_UF",
         "nome_uf" = "NM_UF",
         'sigla_uf' = "SIGLA_UF",
         "nome_regiao" = "NM_REGIAO",
         "area_uf" = "AREA_KM2",
         "area_integrada" = "AREA_INT",
         "porcentagem_integrada" = "PORC_INT")

municipios_fronteira <- read_sf(file.path(dropbox,"Municipios_Fronteira/Municipios_Faixa_Fronteira_2022.shp")) %>%
  st_transform("WGS84") |> 
  rename("id_municipio" = "CD_MUN",
         "nome" = "NM_MUN",
         "id_uf" = "CD_UF",
         "nome_uf" = "NM_UF",
         'sigla_uf' = "SIGLA_UF",
         "nome_regiao" = "NM_REGIAO",
         "area_municipio" = "AREA_TOT",
         "area_integrada" = "AREA_INT",
         "porcentagem_integrada" = "PORC_INT") |> 
  mutate(gemea = !(is.na(CID_GEMEA)), .keep = "unused", .after = "porcentagem_integrada")

library(geobr)
sede_municipios <- read_municipal_seat(year=2010, showProgress = F) %>%
  st_transform("WGS84") |> 
  rename("id_municipio" = "code_muni",
         "nome" = "name_muni",
         "id_uf" = "code_state",
         'sigla_uf' = "abbrev_state",
         "nome_regiao" = "name_region",
         "id_regiao" = "code_region",
         "ano" = "year") |> 
  mutate(id_municipio = as.character(id_municipio))

t <- select(municipios_fronteira, id_municipio)
st_geometry(t) <- NULL

sede_municipios <- sede_municipios |> 
  semi_join(t, by="id_municipio")

rm(t)

```

```{r fig.width=5}
library(ggplot2)

ggplot() +
  # Plot dos Municípios na Faixa de Fronteira com cores diferenciadas
  geom_sf(data = municipios_fronteira, aes(fill = "Municípios"), color = "darkgreen", size = 0.3) +
  # Personalização da Faixa de Fronteira
  geom_sf(data = fronteira, aes(fill = "Faixa de Fronteira"), color = "darkblue", size = 0.5, alpha = 0.5) +
  # Adição das Sedes Municipais
  geom_sf(data = sede_municipios, aes(color = "Sedes Municipais"), size = 1.5, shape = 21, fill = "white", stroke = 0.5) +
  # Ajuste das escalas e rótulos para a legenda
  scale_fill_manual(name = " ", values = c("Faixa de Fronteira" = "lightblue", "Municípios" = "lightgreen")) +
  scale_color_manual(name = " ", values = c("Sedes Municipais" = "black")) +
  # Tema e título
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "right")

```
```{r}
library(tidyverse)
espaciais <- read_rds(file.path(dropbox, "dados_espaciais.rds"))
```

```{r}
library(geobr)
sede_municipios <- read_municipal_seat(year=2010, showProgress = F) %>%
  st_transform("WGS84") |> 
  rename("id_municipio" = "code_muni",
         "nome" = "name_muni",
         "id_uf" = "code_state",
         'sigla_uf' = "abbrev_state",
         "nome_regiao" = "name_region",
         "id_regiao" = "code_region",
         "ano" = "year") |> 
  mutate(id_municipio = as.character(id_municipio))

t <- select(espaciais, id_municipio)
st_geometry(t) <- NULL

sede_municipios <- sede_municipios |> 
  semi_join(t, by="id_municipio")

rm(t)


```

```{r}
library(sf)

# Filtrar os municípios de tratamento e controle
tratamento <- espaciais %>% filter(groups == "treatment")
controle <- espaciais %>% filter(groups == "control")

# Unir as geometrias de cada grupo
tratamento_union <- st_union(tratamento)
controle_union <- st_union(controle)

# Calcular a fronteira entre tratamento e controle
linha_divisoria <- st_intersection(st_boundary(tratamento_union), st_boundary(controle_union))
```

```{r}
ggplot() +
  # Diferenciação entre Tratamento e Controle
  geom_sf(data = espaciais, aes(fill = groups), color = "darkgreen", size = 0.3) +
  # Adição das Sedes Municipais
  geom_sf(data = sede_municipios, color = "black", size = 1.5, shape = 21, fill = "white", stroke = 0.5) +
  # Adição da Linha Divisória com a legenda
  geom_sf(data = linha_divisoria, aes(color = "Divisão Tratamento/Controle"), size = 0.3, linetype = "solid") +
  # Ajuste das escalas e rótulos para a legenda
  scale_fill_manual(name = "Classificação", values = c("treatment" = "lightgreen", "control" = "lightblue"),
                    labels = c("Controle", "Tratamento")) +
  scale_color_manual(name = "", values = c("Divisão Tratamento/Controle" = "red")) +
  # Tema e título
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "right") +
  guides(color = guide_legend(override.aes = list(linetype = "solid", size = 0.5)))


```

### Tamanho da amostra

## Bases de dados utilizadas

### Sistema de Informação de Mortalidade (SIM)

### Dados Nacionais de Segurança Pública

## Variáveis
